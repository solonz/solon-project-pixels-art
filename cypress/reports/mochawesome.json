{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-04-27T01:28:06.845Z",
    "end": "2022-04-27T01:29:32.176Z",
    "duration": 85331,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "92608c50-91aa-4993-b817-a816e7099afe",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a65aa775-9831-4779-acf7-e4bac5f0716f",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "51aa3eff-8960-4d03-9346-f99475405e6d",
              "parentUUID": "a65aa775-9831-4779-acf7-e4bac5f0716f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51aa3eff-8960-4d03-9346-f99475405e6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 255,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c05686a5-7086-40ff-b324-79fdd3ce0524",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 265,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "230bd3db-09cc-44f3-adcb-bca2beaf8bd2",
              "parentUUID": "c05686a5-7086-40ff-b324-79fdd3ce0524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "c3cb88b9-77a9-414a-8991-cffffe742f58",
              "parentUUID": "c05686a5-7086-40ff-b324-79fdd3ce0524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "92fbacdc-a24b-42e1-bd04-a050fe57610f",
              "parentUUID": "c05686a5-7086-40ff-b324-79fdd3ce0524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "a5f10b65-dd33-4ece-b9cb-0ec1953415f1",
              "parentUUID": "c05686a5-7086-40ff-b324-79fdd3ce0524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "1bca5178-f689-4ed5-8d0b-078918fe9a86",
              "parentUUID": "c05686a5-7086-40ff-b324-79fdd3ce0524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "93d2f825-5919-4620-9287-de5257e37450",
              "parentUUID": "c05686a5-7086-40ff-b324-79fdd3ce0524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "6ac677a4-4a90-4b47-bc08-b5a6d50f9b9e",
              "parentUUID": "c05686a5-7086-40ff-b324-79fdd3ce0524",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "230bd3db-09cc-44f3-adcb-bca2beaf8bd2",
            "c3cb88b9-77a9-414a-8991-cffffe742f58",
            "92fbacdc-a24b-42e1-bd04-a050fe57610f",
            "a5f10b65-dd33-4ece-b9cb-0ec1953415f1",
            "1bca5178-f689-4ed5-8d0b-078918fe9a86",
            "93d2f825-5919-4620-9287-de5257e37450",
            "6ac677a4-4a90-4b47-bc08-b5a6d50f9b9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1324,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6440cc79-f32e-49da-abc3-8d7a194d31ad",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 220,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "843b0ec4-1c35-46cf-bfaa-b47a0339c979",
              "parentUUID": "6440cc79-f32e-49da-abc3-8d7a194d31ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "c50da0b9-d1ee-432c-aa7f-797b667f2d03",
              "parentUUID": "6440cc79-f32e-49da-abc3-8d7a194d31ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "843b0ec4-1c35-46cf-bfaa-b47a0339c979",
            "c50da0b9-d1ee-432c-aa7f-797b667f2d03"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 412,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ff74f9db-b58a-424f-9db1-fa5566579401",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "01a2da2b-2aa5-497b-a074-f9f5872a8074",
              "parentUUID": "ff74f9db-b58a-424f-9db1-fa5566579401",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "9824962c-7b8a-4bae-9afa-bc08c440e82b",
              "parentUUID": "ff74f9db-b58a-424f-9db1-fa5566579401",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "88a3bbcc-ff02-489e-bf49-23960dd96d9d",
              "parentUUID": "ff74f9db-b58a-424f-9db1-fa5566579401",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "1e23bebb-2687-4558-abe8-bb1cdd97a1f2",
              "parentUUID": "ff74f9db-b58a-424f-9db1-fa5566579401",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "01a2da2b-2aa5-497b-a074-f9f5872a8074",
            "9824962c-7b8a-4bae-9afa-bc08c440e82b",
            "88a3bbcc-ff02-489e-bf49-23960dd96d9d",
            "1e23bebb-2687-4558-abe8-bb1cdd97a1f2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 675,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "380df943-ebe5-4939-af43-7b6a726d96c7",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 388,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "96e430b6-f743-44ab-9d9c-f1202be4e11f",
              "parentUUID": "380df943-ebe5-4939-af43-7b6a726d96c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "757d833d-ad95-4286-a6f1-2d919eb1accf",
              "parentUUID": "380df943-ebe5-4939-af43-7b6a726d96c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96e430b6-f743-44ab-9d9c-f1202be4e11f",
            "757d833d-ad95-4286-a6f1-2d919eb1accf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 697,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "85360cdd-7c67-4ac9-9d53-154ffdecc5ac",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "35e5331e-ec91-4054-948a-6c98f3d5d115",
              "parentUUID": "85360cdd-7c67-4ac9-9d53-154ffdecc5ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "8d52ef91-c4e1-44eb-bfe3-2b9293419fbb",
              "parentUUID": "85360cdd-7c67-4ac9-9d53-154ffdecc5ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35e5331e-ec91-4054-948a-6c98f3d5d115",
            "8d52ef91-c4e1-44eb-bfe3-2b9293419fbb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 405,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6646fa95-05b4-452f-a92a-95318a377d85",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 484,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "7b79dcf7-0d54-4e4f-be71-4b71d9643b12",
              "parentUUID": "6646fa95-05b4-452f-a92a-95318a377d85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "44a0c0fa-75ed-4ed1-8960-490c2a9df1b9",
              "parentUUID": "6646fa95-05b4-452f-a92a-95318a377d85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b79dcf7-0d54-4e4f-be71-4b71d9643b12",
            "44a0c0fa-75ed-4ed1-8960-490c2a9df1b9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9814,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c22dd196-3ffb-405e-b8ee-0222c1f94752",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "d41609b2-9428-4299-ba3e-6ff93f89c618",
              "parentUUID": "c22dd196-3ffb-405e-b8ee-0222c1f94752",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9079,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "c8672b35-6f0f-4734-8244-0aa2be27cb12",
              "parentUUID": "c22dd196-3ffb-405e-b8ee-0222c1f94752",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1423,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "f9718cd7-b84b-4c5c-911d-82fa02574213",
              "parentUUID": "c22dd196-3ffb-405e-b8ee-0222c1f94752",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d41609b2-9428-4299-ba3e-6ff93f89c618",
            "c8672b35-6f0f-4734-8244-0aa2be27cb12",
            "f9718cd7-b84b-4c5c-911d-82fa02574213"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12788,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "20a4cfc0-a010-498c-9671-efa9df0dcead",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "ccd4861f-058f-4000-9361-3a25094b66e7",
              "parentUUID": "20a4cfc0-a010-498c-9671-efa9df0dcead",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "2fec7d7d-cc56-4c07-a598-1536ad91c9f3",
              "parentUUID": "20a4cfc0-a010-498c-9671-efa9df0dcead",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "22d8a2fa-3f33-45e5-9c98-dd5254e55e98",
              "parentUUID": "20a4cfc0-a010-498c-9671-efa9df0dcead",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2592,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "a1c9f147-73bb-4a35-8882-60d4c97c59e0",
              "parentUUID": "20a4cfc0-a010-498c-9671-efa9df0dcead",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ccd4861f-058f-4000-9361-3a25094b66e7",
            "2fec7d7d-cc56-4c07-a598-1536ad91c9f3",
            "22d8a2fa-3f33-45e5-9c98-dd5254e55e98",
            "a1c9f147-73bb-4a35-8882-60d4c97c59e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3062,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "55f3caba-f38c-45d6-a39d-e65820bf57ca",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4471,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36033/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36033/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36033/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36033/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36033/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36033/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36033/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36033/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36033/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ffd4677d-73b4-4298-ad9f-e330dd2cc1dd",
              "parentUUID": "55f3caba-f38c-45d6-a39d-e65820bf57ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4486,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36033/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36033/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36033/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36033/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36033/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36033/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36033/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36033/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36033/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3fb1572e-2372-41f9-a845-83da8ff87e30",
              "parentUUID": "55f3caba-f38c-45d6-a39d-e65820bf57ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4404,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36033/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36033/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36033/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36033/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36033/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36033/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36033/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36033/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36033/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ae169ddc-3e23-48bd-b852-95a34ef183e6",
              "parentUUID": "55f3caba-f38c-45d6-a39d-e65820bf57ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4405,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36033/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36033/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36033/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36033/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36033/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36033/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36033/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36033/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36033/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e0a49519-3582-4e56-a9ab-fc33e5d7548f",
              "parentUUID": "55f3caba-f38c-45d6-a39d-e65820bf57ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4389,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36033/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36033/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36033/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36033/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36033/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36033/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36033/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36033/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36033/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "54a328b2-dd4c-4b37-99cd-f69f6c82af7b",
              "parentUUID": "55f3caba-f38c-45d6-a39d-e65820bf57ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4571,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36033/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36033/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36033/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36033/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36033/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36033/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36033/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36033/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36033/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f97df8f5-66dd-420b-bc5a-e995ffb638e8",
              "parentUUID": "55f3caba-f38c-45d6-a39d-e65820bf57ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4493,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36033/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36033/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36033/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36033/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36033/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36033/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36033/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36033/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36033/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ac5a37a3-ff27-42dc-84e6-d5da1316d16f",
              "parentUUID": "55f3caba-f38c-45d6-a39d-e65820bf57ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4344,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36033/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36033/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36033/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36033/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36033/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36033/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36033/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36033/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36033/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d199b8f0-d5e8-41a5-8297-eaa43a13bcf2",
              "parentUUID": "55f3caba-f38c-45d6-a39d-e65820bf57ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4585,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36033/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36033/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36033/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36033/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36033/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36033/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36033/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36033/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36033/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "12ae7c8c-5a69-4e80-b4df-b80e023c83f7",
              "parentUUID": "55f3caba-f38c-45d6-a39d-e65820bf57ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ffd4677d-73b4-4298-ad9f-e330dd2cc1dd",
            "3fb1572e-2372-41f9-a845-83da8ff87e30",
            "ae169ddc-3e23-48bd-b852-95a34ef183e6",
            "e0a49519-3582-4e56-a9ab-fc33e5d7548f",
            "54a328b2-dd4c-4b37-99cd-f69f6c82af7b",
            "f97df8f5-66dd-420b-bc5a-e995ffb638e8",
            "ac5a37a3-ff27-42dc-84e6-d5da1316d16f",
            "d199b8f0-d5e8-41a5-8297-eaa43a13bcf2",
            "12ae7c8c-5a69-4e80-b4df-b80e023c83f7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40148,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f91ec070-80ad-45d6-bdc0-bef5d53a027a",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4443,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36033/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36033/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36033/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36033/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36033/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36033/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36033/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36033/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36033/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b1b6482a-4882-4682-be00-53e6d30167e4",
              "parentUUID": "f91ec070-80ad-45d6-bdc0-bef5d53a027a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4568,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36033/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36033/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36033/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36033/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36033/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36033/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36033/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36033/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36033/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ae55dd8b-27f3-419d-bd9e-2fbdaac96fee",
              "parentUUID": "f91ec070-80ad-45d6-bdc0-bef5d53a027a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4554,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36033/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36033/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36033/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36033/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36033/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36033/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36033/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36033/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36033/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36033/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a5abbe6b-2115-454f-be82-8dac02ec0359",
              "parentUUID": "f91ec070-80ad-45d6-bdc0-bef5d53a027a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b1b6482a-4882-4682-be00-53e6d30167e4",
            "ae55dd8b-27f3-419d-bd9e-2fbdaac96fee",
            "a5abbe6b-2115-454f-be82-8dac02ec0359"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13565,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8f751383-4d2a-40a9-8347-a96023f70066",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 563,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:36033/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:36033/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:36033/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:36033/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:36033/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:36033/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:36033/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:36033/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36033/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36033/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:36033/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36033/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "d8ae34a9-5766-458f-9d4f-861c83c6bb2c",
              "parentUUID": "8f751383-4d2a-40a9-8347-a96023f70066",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 542,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:36033/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:36033/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:36033/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:36033/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:36033/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:36033/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:36033/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:36033/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36033/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36033/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:36033/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36033/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36033/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "fb23c931-68f7-4a13-bfa1-c5047af5364d",
              "parentUUID": "8f751383-4d2a-40a9-8347-a96023f70066",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d8ae34a9-5766-458f-9d4f-861c83c6bb2c",
            "fb23c931-68f7-4a13-bfa1-c5047af5364d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1105,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}